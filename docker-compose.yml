# Arquitec/docker-compose.yml (CORREGIDO Y COMPLETO)

services:
  # --- Servicio de Base de Datos ---
  postgres_db:
    image: postgres:15-alpine          # Imagen oficial de PostgreSQL (versión ligera)
    container_name: arepasaurio-db     # Nombre fácil de identificar para el contenedor
    restart: always                    # Reinicia el contenedor si falla
    environment:
      POSTGRES_DB: postgres            # Nombre de la base de datos a crear/usar
      POSTGRES_USER: postgres          # Usuario de la base de datos
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} # Lee la contraseña del archivo .env
    ports:
      # Mapea puerto 5433 del host al 5432 del contenedor (ajusta el 5433 si prefieres/puedes usar 5432)
      - "5433:5432"
    volumes:
      # Guarda los datos de la DB en un volumen persistente llamado 'postgres_data'
      - postgres_data:/var/lib/postgresql/data
    networks:
      - arepasaurio-net                 # Conecta a la red personalizada
    healthcheck:
      # Verifica si la base de datos está lista para aceptar conexiones
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s                     # Intervalo entre verificaciones
      timeout: 5s                      # Tiempo de espera para la verificación
      retries: 5                       # Número de reintentos

  # --- Servicio del Backend ---
  backend:
    build: ./backend                   # Construye la imagen desde la carpeta ./backend
    container_name: arepasaurio-backend
    restart: always
    depends_on:
      postgres_db:
        condition: service_healthy      # Espera a que el servicio postgres_db esté 'healthy'
    environment:
      # Variables para que el backend se conecte a la DB
      DB_HOST: postgres_db             # Usa el nombre del servicio de la DB como host
      DB_USER: postgres
      DB_PASSWORD: ${POSTGRES_PASSWORD} # Lee la contraseña del archivo .env
      DB_NAME: postgres
      DB_PORT: 5432                     # Puerto interno de la DB
    ports:
      # Mapea el puerto 5000 del host al 3000 del contenedor (para acceso externo a la API)
      - "5000:3000"
    networks:
      - arepasaurio-net

  # --- Servicio del Frontend (CORREGIDO) ---
  frontend:
    build: ./frontend                  # <-- ¡CORRECCIÓN CLAVE! Construye desde ./frontend
    container_name: arepasaurio-frontend
    restart: always
    ports:
      # Mapea el puerto 8080 del host al 80 del contenedor (para acceso desde el navegador)
      - "8080:80"
    depends_on:
      - backend                        # Depende del backend (no necesita healthcheck)
    networks:
      - arepasaurio-net

# --- Definición de Red y Volumen ---
networks:
  arepasaurio-net:                     # Define la red personalizada
    driver: bridge                     # Usa el driver bridge por defecto

volumes:
  postgres_data:                       # Define el volumen nombrado para la DB
